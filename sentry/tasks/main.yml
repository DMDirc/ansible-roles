---

- name: Create sentry user
  user: name={{ sentry_user }}
  tags: [sentry]

- name: Create virtual environment
  sudo: true
  sudo_user: "{{ sentry_user }}"
  command: virtualenv "{{ sentry_dir }}"
           creates={{ sentry_dir }}/bin/activate
  tags: [sentry,sentry-virtualenv]

- name: Copy virtual env wrapper script
  sudo: true
  sudo_user: "{{ sentry_user }}"
  template: src=venv_exec.j2
            dest={{ sentry_dir }}/exec
            mode=755
  tags: [sentry,sentry-virtualenv]

- name: Install sentry
  sudo: true
  sudo_user: "{{ sentry_user }}"
  command: "{{ sentry_dir }}/exec easy_install -UZ sentry[mysql]
            creates={{ sentry_dir }}/bin/sentry"
  register: sentry_install
  tags: [sentry]

- name: Copy sentry configuration
  sudo: true
  sudo_user: "{{ sentry_user }}"
  template: src=sentry.conf.j2
            dest={{ sentry_dir }}/config.py
  register: sentry_config
  tags: [sentry,sentry-conf]

- name: Create MySQL database
  mysql_db: name={{ sentry_db_name }}
  register: sentry_db_create
  tags: [sentry,sentry-mysql]

- include: ../../shared/generate-password.yml
  when: sentry_db_create.changed
  tags: [sentry,sentry-mysql]

- name: Create MySQL user
  mysql_user: name={{ sentry_db_user }}
              password={{ random_password.stdout }}
              priv=*.*:USAGE/{{ sentry_db_name }}.*:ALL
  when: sentry_db_create.changed
  tags: [sentry,sentry-mysql]

- name: Store MySQL user password
  copy: dest={{ sentry_dir }}/mysql.pass
        content="{{ random_password.stdout }}"
        owner={{ sentry_user }}
        mode=600
  when: sentry_db_create.changed
  tags: [sentry,sentry-mysql]

- include: ../../shared/generate-password.yml
  when: sentry_config.changed
  tags: [sentry,sentry-conf]

- name: Write random session ID
  copy: dest={{ sentry_dir }}/secret.key
        content="{{ random_password.stdout }}"
        owner={{ sentry_user }}
        mode=600
  when: sentry_config.changed
  tags: [sentry,sentry-conf]

- name: Upgrade/create sentry database schema
  command: "{{ sentry_dir }}/exec sentry --config={{ sentry_dir }}/config.py upgrade --noinput"
  when: sentry_db_create.changed or sentry_config.changed
  tags: [sentry]

- name: Deploy setup script
  template: src=setup.py.j2
            dest={{ sentry_dir }}/setup.py
            owner={{ sentry_user }}
            mode=0755
  register: sentry_setup
  tags: [sentry,sentry-setup]

- name: Run setup script
  sudo: true
  sudo_user: "{{ sentry_user }}"
  command: "{{ sentry_dir }}/exec {{ sentry_dir }}/setup.py chdir={{ sentry_dir }}"
  when: sentry_setup.changed
  tags: [sentry,sentry-setup]

- name: Install Supervisor configuration
  template: src=supervisor.j2
            dest=/etc/supervisor/conf.d/sentry.conf
  notify: [reload supervisor]
  tags: [sentry, sentry-supervisor]